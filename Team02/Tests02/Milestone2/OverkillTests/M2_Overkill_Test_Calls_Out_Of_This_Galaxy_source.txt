procedure aa {
    call ab;
    call ac;
    call ad;
    call ae;
    call af;
    call ag;
    call ah;
    call ai;
    call aj;
    call ak;
    call al;
    call am;
    call an;
    call ao;
    call ap;
    call aq;
    call ar;
    call as;
    call at;
    call au;
    call av;
    call aw;
    call ax;
    call ay;
    call az;
    call ba;
    call bb;
    call bc;
    call bd; }
procedure ab {
    call ac;
    call ad;
    call ae;
    call af;
    call ag;
    call ah;
    call ai;
    call aj;
    call ak;
    call al;
    call am;
    call an;
    call ao;
    call ap;
    call aq;
    call ar;
    call as;
    call at;
    call au;
    call av;
    call aw;
    call ax;
    call ay;
    call az;
    call ba;
    call bb;
    call bc;
    call bd; }
procedure ac {
    call ad;
    call ae;
    call af;
    call ag;
    call ah;
    call ai;
    call aj;
    call ak;
    call al;
    call am;
    call an;
    call ao;
    call ap;
    call aq;
    call ar;
    call as;
    call at;
    call au;
    call av;
    call aw;
    call ax;
    call ay;
    call az;
    call ba;
    call bb;
    call bc;
    call bd; }
procedure ad {
    call ae;
    call af;
    call ag;
    call ah;
    call ai;
    call aj;
    call ak;
    call al;
    call am;
    call an;
    call ao;
    call ap;
    call aq;
    call ar;
    call as;
    call at;
    call au;
    call av;
    call aw;
    call ax;
    call ay;
    call az;
    call ba;
    call bb;
    call bc;
    call bd; }
procedure ae {
    call af;
    call ag;
    call ah;
    call ai;
    call aj;
    call ak;
    call al;
    call am;
    call an;
    call ao;
    call ap;
    call aq;
    call ar;
    call as;
    call at;
    call au;
    call av;
    call aw;
    call ax;
    call ay;
    call az;
    call ba;
    call bb;
    call bc;
    call bd; }
procedure af {
    call ag;
    call ah;
    call ai;
    call aj;
    call ak;
    call al;
    call am;
    call an;
    call ao;
    call ap;
    call aq;
    call ar;
    call as;
    call at;
    call au;
    call av;
    call aw;
    call ax;
    call ay;
    call az;
    call ba;
    call bb;
    call bc;
    call bd; }
procedure ag {
    call ah;
    call ai;
    call aj;
    call ak;
    call al;
    call am;
    call an;
    call ao;
    call ap;
    call aq;
    call ar;
    call as;
    call at;
    call au;
    call av;
    call aw;
    call ax;
    call ay;
    call az;
    call ba;
    call bb;
    call bc;
    call bd; }
procedure ah {
    call ai;
    call aj;
    call ak;
    call al;
    call am;
    call an;
    call ao;
    call ap;
    call aq;
    call ar;
    call as;
    call at;
    call au;
    call av;
    call aw;
    call ax;
    call ay;
    call az;
    call ba;
    call bb;
    call bc;
    call bd; }
procedure ai {
    call aj;
    call ak;
    call al;
    call am;
    call an;
    call ao;
    call ap;
    call aq;
    call ar;
    call as;
    call at;
    call au;
    call av;
    call aw;
    call ax;
    call ay;
    call az;
    call ba;
    call bb;
    call bc;
    call bd; }
procedure aj {
    call ak;
    call al;
    call am;
    call an;
    call ao;
    call ap;
    call aq;
    call ar;
    call as;
    call at;
    call au;
    call av;
    call aw;
    call ax;
    call ay;
    call az;
    call ba;
    call bb;
    call bc;
    call bd; }
procedure ak {
    call al;
    call am;
    call an;
    call ao;
    call ap;
    call aq;
    call ar;
    call as;
    call at;
    call au;
    call av;
    call aw;
    call ax;
    call ay;
    call az;
    call ba;
    call bb;
    call bc;
    call bd; }
procedure al {
    call am;
    call an;
    call ao;
    call ap;
    call aq;
    call ar;
    call as;
    call at;
    call au;
    call av;
    call aw;
    call ax;
    call ay;
    call az;
    call ba;
    call bb;
    call bc;
    call bd; }
procedure am {
    call an;
    call ao;
    call ap;
    call aq;
    call ar;
    call as;
    call at;
    call au;
    call av;
    call aw;
    call ax;
    call ay;
    call az;
    call ba;
    call bb;
    call bc;
    call bd; }
procedure an {
    call ao;
    call ap;
    call aq;
    call ar;
    call as;
    call at;
    call au;
    call av;
    call aw;
    call ax;
    call ay;
    call az;
    call ba;
    call bb;
    call bc;
    call bd; }
procedure ao {
    call ap;
    call aq;
    call ar;
    call as;
    call at;
    call au;
    call av;
    call aw;
    call ax;
    call ay;
    call az;
    call ba;
    call bb;
    call bc;
    call bd; }
procedure ap {
    call aq;
    call ar;
    call as;
    call at;
    call au;
    call av;
    call aw;
    call ax;
    call ay;
    call az;
    call ba;
    call bb;
    call bc;
    call bd; }
procedure aq {
    call ar;
    call as;
    call at;
    call au;
    call av;
    call aw;
    call ax;
    call ay;
    call az;
    call ba;
    call bb;
    call bc;
    call bd; }
procedure ar {
    call as;
    call at;
    call au;
    call av;
    call aw;
    call ax;
    call ay;
    call az;
    call ba;
    call bb;
    call bc;
    call bd; }
procedure as {
    call at;
    call au;
    call av;
    call aw;
    call ax;
    call ay;
    call az;
    call ba;
    call bb;
    call bc;
    call bd; }
procedure at {
    call au;
    call av;
    call aw;
    call ax;
    call ay;
    call az;
    call ba;
    call bb;
    call bc;
    call bd; }
procedure au {
    call av;
    call aw;
    call ax;
    call ay;
    call az;
    call ba;
    call bb;
    call bc;
    call bd; }
procedure av {
    call aw;
    call ax;
    call ay;
    call az;
    call ba;
    call bb;
    call bc;
    call bd; }
procedure aw {
    call ax;
    call ay;
    call az;
    call ba;
    call bb;
    call bc;
    call bd; }
procedure ax {
    call ay;
    call az;
    call ba;
    call bb;
    call bc;
    call bd; }
procedure ay {
    call az;
    call ba;
    call bb;
    call bc;
    call bd; }
procedure az {
    call ba;
    call bb;
    call bc;
    call bd; }
procedure ba {
    call bb;
    call bc;
    call bd; }
procedure bb {
    call bc;
    call bd; }
procedure bc {
    call bd; }
procedure bd {
    read x; }